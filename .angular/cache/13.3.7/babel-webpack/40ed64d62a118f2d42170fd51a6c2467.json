{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FeaturesModule } from '@features/features.module';\nimport { CoreModule } from '@core/core.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\"; // AoT requires an exported function for factories\n\nexport function createTranslateLoader(http) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [HttpClientModule],\n    imports: [[FontAwesomeModule, CommonModule, HttpClientModule, BrowserModule, FormsModule, ReactiveFormsModule, AppRoutingModule, FeaturesModule, NgbModule, CoreModule, TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    })], FormsModule]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}